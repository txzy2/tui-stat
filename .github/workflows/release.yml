name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (optional) Path to changelog.
          # changelog: CHANGELOG.md
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of target triplets to build for.
          # See https://doc.rust-lang.org/rustc/platform-support.html for a list of targets.
          target: ${{ matrix.target }}
          # (optional) Name of the executable to be uploaded.
          # [default value: package name defined in Cargo.toml]
          bin: tui-stat
          # (optional) Archive name (without extension) that will be created.
          # [default value: $bin-$target]
          archive: tui-stat-${{ matrix.target }}
          # (optional) Whether to compress the binary or not.
          # By default, binaries for Windows are not compressed and all others are compressed.
          # Compressed binaries need to be extracted before usage.
          compress: auto
          # (optional) If specified, embeds the CHANGELOG.md file from the root of the repository to the archive.
          # changelog: CHANGELOG.md
          # (optional) If specified, embeds the README.md file from the root of the repository to the archive.
          readme: README.md
          # (optional) GitHub token to upload assets.
          token: ${{ secrets.GITHUB_TOKEN }}
